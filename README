filterimage has a new syntax. It now can process a sequence of commands and the results are stored 
in variables. This way you can write scripts. 

Usage:
FilterImage [-i] [-f <input file>] [command] [command] [command] ...

Arguments are processed sequentially in the order of appearance, i.e. I can write an input file and 
execute its commands and after that have FilterImage drop you to an interactive shell where you can 
continue working on the images loaded/generated. To get information on available commands type the 
command "help".

To get you started a small sample script:

# load an image and store the image in variable "Iin"
imread I=Iin file='Solibro Batch 4 NEW 18-9-2018_2180529003146934100_StitchedOverlayImage_LOW.jpg'

# create a filter set and store it in variable F. Note the method is "p", which stands for the 
# "pseudo inverse". Other methods are "i" (inverse), "s" (svd), and "q" (QR)
makefilterset F=F nn=17 ns=17 ne=17 nw=17 m=2 dm=2 fx=1 fy=1 method=p

# you can save the filter to file for later usage (stored in a binary format)
fsetsave F=F file=F.filterset

# Apply the filter-set F to image Iin and store the results in Iout
applyfilterset Iin=Iin Iout=Iout F=F stepx=1 stepy=1

# Inspect the results
show I=Iout

# save the results
imsave I=Iout file=test.png
